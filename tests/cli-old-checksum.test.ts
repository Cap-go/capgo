import { randomUUID } from 'node:crypto'
import { afterAll, beforeAll, describe, expect, it } from 'vitest'
import { cleanupCli, getSemver, prepareCli } from './cli-utils'
import { uploadBundleSDK } from './cli-sdk-utils'
import { resetAndSeedAppData, resetAppData, resetAppDataStats } from './test-utils'

describe('tests CLI old checksum (SDK)', () => {
  const id = randomUUID()
  const APPNAME = `com.cli_old_checksum_${id}`
  let semver = getSemver()

  beforeAll(async () => {
    await resetAndSeedAppData(APPNAME)
    await prepareCli(APPNAME, true)
  })
  afterAll(async () => {
    await cleanupCli(APPNAME)
    await resetAppData(APPNAME)
    await resetAppDataStats(APPNAME)
  })

  it('test upload bundle with auto encryption ', async () => {
    semver = getSemver(semver)
    const result = await uploadBundleSDK(APPNAME, semver, 'production', {
      ignoreCompatibilityCheck: true,
      // Note: Checksum is automatically generated by SDK
    })
    expect(result.success).toBe(true)
    // SDK doesn't return checksum in output like CLI does
    // The checksum is handled internally
  })
})
